[user]
  name = Josh Barnheiser
  email = josh.barnheiser@example.com
[core]
   editor = /usr/bin/vim
   bare = false # use git-init --bare to make this true. Will act like remote (no working dir).
[commit]
    template = ~/.gitmessage.txt
[diff]
[color]
    ui = auto
[alias]
    a = add .
    aa = add --all
    amend = commit --amend
    ants = describe HEAD
    b = branch
    ba = branch -a
    bl = blame
    c = commit
    ca = "!git add .; git commit"
    cfp = cat-file -p
    cfs = cat-file -s
    cft = cat-file -t
    cl = clone
    clb = clone --bare
    co = checkout
    D = branch -D
    dc = diff --cached
    dh1 = diff HEAD~1
    di = diff
    f = fetch
    files = "!git diff --name-status $1^ $1 #"
    fv = fetch -v
    i = init
    ib = init --bare
    l = log
    lol = log --oneline --graph --decorate
    ls = log --stat
    lsf = ls-files
    lsr = ls-remote
    m = merge
    mb = merge-base
    nants = describe --tags HEAD
    pa = patch
    po = push origin
    pom = push origin master
    rb = rebase
    rbi = rebase -i
    rev = revert
    rh = reset --hard
    rl = reflog
    rs = reset --soft
    st = status
    tan = tag -a
    tm = "!git reset HEAD@{$1} #"
    undo = revert HEAD
    wb = "!exist=$(git branch -a | grep $1 | wc -l); if [ $exist -eq 0 ] ; then git branch $1; git reset --hard HEAD^; git checkout $1; else git reset --soft HEAD^; git stash; git checkout $1; git stash pop; fi #"
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
# FREEBSD    lg = "! git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative | more -R"

[merge]
    tool = vimdiff
